apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingestion-service
  namespace: framedb-storage
  labels:
    app: ingestion-service
spec:
  selector:
    matchLabels:
      app: ingestion-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ingestion-service
    spec:
      containers:
      - name: ingestion-service
        image: ingestion-service:latest
        imagePullPolicy : Never
        ports:
        - containerPort: 8000
          protocol: TCP
        env:
         - name : "LOGGING"
           value : "Yes"
         - name : "PYTHONUNBUFFERED"
           value : "0"
         - name : "FRAMEDB_CONFIG_USER"
           valueFrom :
            secretKeyRef :
             name : config-db-creds
             key : username 
         - name : "FRAMEDB_CONFIG_PASSWORD"
           valueFrom :
            secretKeyRef :
             name : config-db-creds
             key : password
        volumeMounts:
         - name : logging 
           mountPath : /logs
         - name : kubeconfig
           mountPath : /root/.kube
      volumes :
        - name : logging
          hostPath:
            path: /home/ubuntu/framedb-logs
        - name : kubeconfig
          hostPath :
            path : /home/ubuntu/.kube

---
apiVersion: v1
kind: Service
metadata:
  name: ingestion-service-svc
  namespace: framedb-storage
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind: Mapping
      name: cluster-config
      prefix: /framedb-ingestion/
      rewrite : /
      service: ingestion-service-svc.framedb-storage.svc.cluster.local:8000
spec:
  selector:
    app: ingestion-service
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort : 32511
  type: NodePort